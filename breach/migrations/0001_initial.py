# Generated by Django 4.1.3 on 2022-12-01 11:09

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Breach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(max_length=20, unique=True)),
                ("breach_bumper", models.BooleanField()),
                (
                    "helptext_display_default",
                    models.CharField(blank=True, default="show", max_length=20),
                ),
                ("report_date", models.DateField(default=datetime.date.today)),
                ("report_update", models.DateField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="breaches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "breach slug",
                "verbose_name_plural": "breach slugs",
            },
        ),
        migrations.CreateModel(
            name="BreachTimeLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "btl_start_known",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="yes",
                        max_length=10,
                    ),
                ),
                ("btl_start", models.DateField(blank=True, null=True)),
                (
                    "btl_ongoing",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="yes",
                        max_length=10,
                    ),
                ),
                ("btl_end", models.DateField(blank=True, null=True)),
                (
                    "btl_may_recur",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="yes",
                        max_length=10,
                    ),
                ),
                ("btl_noticed", models.DateField(blank=True, null=True)),
                (
                    "btl_notif_delay_reason",
                    models.TextField(blank=True, max_length=1000),
                ),
                ("btl_other_supauth", models.TextField(blank=True, max_length=300)),
                ("btl_remarks", models.TextField(blank=True, max_length=1000)),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timelines",
                        to="breach.breach",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BreachMeasures",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bmeasures_taken", models.TextField(blank=True, max_length=2000)),
                ("bmeasures_proposed", models.TextField(blank=True, max_length=2000)),
                (
                    "bmeasures_no_measures_reason",
                    models.TextField(blank=True, max_length=2000),
                ),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measures",
                        to="breach.breach",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BreachDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bdesc_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            (
                                "lost_device",
                                "Lost or stolen device (laptop, memory stick, etc.)",
                            ),
                            (
                                "lost_documents",
                                "Documents lost, stolen or stored in unsafe place",
                            ),
                            (
                                "lost_postal_mail",
                                "Postal mail lost or accidentally opened",
                            ),
                            ("unencrypted_email", "Unencrypted email"),
                            ("email_cc", "Email with improper CC"),
                            (
                                "improperly_disposed_documents",
                                "Improper disposal of documents (records, images, etc.)",
                            ),
                            (
                                "improperly_disposed_media",
                                "Improper disposal of storage media (hard drives, SSDs, memory sticks, etc.)",
                            ),
                            (
                                "hacking_phishing",
                                "Hacker attack, malicious software, phishing or similar",
                            ),
                            (
                                "access_rights_abuse",
                                "Access rights abused (by own employees)",
                            ),
                            ("accidental_publication", "Accidental publication"),
                            (
                                "it_service_wrong_data",
                                "IT service (e.g. Web presence) disclosed false or improper data",
                            ),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                ("bdesc_selection_other", models.TextField(blank=True, max_length=300)),
                ("bdesc_description", models.TextField(blank=True, max_length=2000)),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="descriptions",
                        to="breach.breach",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BreachDataController",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dcon_name", models.CharField(default="Some entity", max_length=100)),
                (
                    "dcon_street",
                    models.CharField(default="42 Sesame St.", max_length=100),
                ),
                ("dcon_pcode", models.CharField(default="54321", max_length=10)),
                ("dcon_city", models.CharField(default="Some city", max_length=50)),
                (
                    "dcon_email",
                    models.EmailField(
                        default="president@some-entity.org", max_length=254
                    ),
                ),
                (
                    "dcon_reporter",
                    models.CharField(default="Data Protection Officer", max_length=100),
                ),
                (
                    "dcon_reporter_function",
                    models.CharField(default="Data Protection Officer", max_length=100),
                ),
                (
                    "dcon_reporter_email",
                    models.CharField(default="dpo@some-entity.org", max_length=100),
                ),
                (
                    "dcon_reporter_phone",
                    models.CharField(default="+43 324 657-1234", max_length=30),
                ),
                (
                    "dcon_dpo_name",
                    models.CharField(default="Data Protection Officer", max_length=100),
                ),
                (
                    "dcon_dpo_email",
                    models.EmailField(default="dpo@some-entity.org", max_length=254),
                ),
                (
                    "dcon_dpo_phone",
                    models.CharField(default="+43 324 657-1234", max_length=30),
                ),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="datacontrollers",
                        to="breach.breach",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data controller",
                "verbose_name_plural": "Data controllers",
            },
        ),
        migrations.CreateModel(
            name="BreachConsequences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bcons_confidentiality_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            (
                                "dissemination_to_3rd_party",
                                "Dissemination of data to unauthorized third parties",
                            ),
                            ("data_linking", "Linking with other data"),
                            (
                                "illegitimate_purposes",
                                "Data usage for illegitimate purposes",
                            ),
                            ("unauthorized_access", "Unauthorized access"),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                ("bcons_confidentiality", models.TextField(blank=True, max_length=300)),
                (
                    "bcons_integrity_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            (
                                "obsolete_data_used",
                                "Obsolete or incorrect data has been used",
                            ),
                            ("data_falsified", "Data was falsified"),
                            (
                                "data_origin_unknown",
                                "Data origin unknown or indeterminate",
                            ),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                ("bcons_integrity", models.TextField(blank=True, max_length=300)),
                (
                    "bcons_availability_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            (
                                "data_unavailable",
                                "Important data is permanently unavailable",
                            ),
                            (
                                "data_temporarily_unavailable",
                                "Important data was temporarily not available",
                            ),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                ("bcons_availability", models.TextField(blank=True, max_length=300)),
                (
                    "bcons_consequences_descr",
                    models.TextField(blank=True, max_length=1000),
                ),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consequences",
                        to="breach.breach",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BreachCommunication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bcomm_communication_selection",
                    models.CharField(
                        choices=[
                            (
                                "already_happened",
                                "Already done (date and details below).",
                            ),
                            (
                                "not_happened_yet",
                                "Not done, yet, but underway (details below).",
                            ),
                            ("may_happen", "Is being considered (details below)."),
                            (
                                "will_not_happen",
                                "Is not being considered (reason below).",
                            ),
                        ],
                        default="already_happened",
                        max_length=100,
                    ),
                ),
                (
                    "bcomm_no_communication_reason",
                    models.TextField(blank=True, max_length=1000),
                ),
                (
                    "bcomm_modality_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("letter", "Letter"),
                            ("personal_dialogue", "Personal dialogue"),
                            ("publication", "Publication in the media"),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                ("bcomm_modality", models.TextField(blank=True, max_length=300)),
                (
                    "bcomm_number_of_data_subjects",
                    models.CharField(blank=True, max_length=150),
                ),
                ("bcomm_remarks", models.TextField(blank=True, max_length=1000)),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communications",
                        to="breach.breach",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BreachAffectedSubjects",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "baffs_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("not_known_yet", "Not known, yet."),
                            ("own_employees", "Own employees"),
                            ("citizens", "Citizens"),
                            ("pupils", "Pupils"),
                            ("students", "Students"),
                            ("patients", "Patients"),
                            ("customers", "Customers"),
                            ("minors", "Minors"),
                            (
                                "special_protection",
                                "Persons in need of special protection",
                            ),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                ("baffs_selection_other", models.TextField(blank=True, max_length=300)),
                (
                    "baffs_datasubjects_min",
                    models.CharField(blank=True, max_length=150),
                ),
                (
                    "baffs_datasubjects_max",
                    models.CharField(blank=True, max_length=150),
                ),
                ("baffs_remarks", models.TextField(blank=True, max_length=1000)),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="affected_subjects",
                        to="breach.breach",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BreachAffectedData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "baffd_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("not_known_yet", "Not known, yet"),
                            ("first_and_last_name", "First and last name"),
                            ("date_of_birth", "Date of birth"),
                            ("address", "Postal address"),
                            ("other_id_data", "Other ID data (ID card number, etc.)"),
                            (
                                "localization_data",
                                "Localization data (GPS tracks, etc.)",
                            ),
                            (
                                "criminal_offense_data",
                                "Data concerning criminal offenses and misdemeanors",
                            ),
                            ("fiscal_secret", "Data concerning fiscal secrets"),
                            (
                                "social_secret",
                                "Data concerning the secrecy of social data",
                            ),
                            (
                                "professional_secret",
                                "Data concerning professional secrets",
                            ),
                            ("official_secret", "Data concerning official secrets"),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                ("baffd_selection_other", models.TextField(blank=True, max_length=300)),
                (
                    "baffd_special_selection",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("special_not_known_yet", "Not known, yet"),
                            ("ethnic_origin", "Racial or ethnic origin"),
                            ("political_opinions", "Political opinions"),
                            ("religious_beliefs", "Religious or philosophical beliefs"),
                            ("trade_union_membership", "Trade union membership"),
                            ("genetic_data", "Genetic data"),
                            ("biometric_data", "Biometric data"),
                            ("health_data", "Health data"),
                            ("sexual_orientation", "Sex life or sexual orientation"),
                        ],
                        default="",
                        max_length=200,
                    ),
                ),
                (
                    "baffd_special_unknown_reason",
                    models.TextField(blank=True, max_length=500),
                ),
                ("baffd_data_min", models.CharField(blank=True, max_length=150)),
                ("baffd_data_max", models.CharField(blank=True, max_length=150)),
                ("baffd_remarks", models.TextField(blank=True, max_length=1000)),
                (
                    "breach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="affected_data",
                        to="breach.breach",
                    ),
                ),
            ],
        ),
    ]
